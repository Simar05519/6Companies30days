class Solution
{
    public:
    //Function to find unit area of the largest region of 1s.
    void traverse(int i,int j,vector<vector<int>>& grid,int &c,int n,int m)
    {
       queue<pair<int,int>>q;
       q.push({i,j});
       vector<pair<int,int>>dir={{-1,0},{1,0},{0,1},{0,-1},{-1,-1},{1,1},{-1,1},{1,-1}};
       
       while(!q.empty()){
           pair<int,int> t=q.front();
           q.pop();
           c++;
           for(int i=0;i<dir.size();i++){
               int x=t.first + dir[i].first;
               int y=t.second + dir[i].second;
               
               if(x>=n || x<0 || y>=m || y<0 || grid[x][y]!=1)continue;
               grid[x][y]=0;
               q.push({x,y});
           }
       }
   }
    int findMaxArea(vector<vector<int>>& grid) {
        // Code here
        int maxc=1;
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                {
                    int c=-1;
                    traverse(i,j,grid,c,n,m);
                    maxc=max(maxc,c);
                }
            }
        }
        return maxc;
    }
};

class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
      queue<pair<int, int>> q;
        int n = grid.size();
        int m = grid[0].size();
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(grid[i][j] == 1)
                    q.push({i, j});
            }
        }
         int dx[4]={0,0,1,-1};
        int dy[4]={1,-1,0,0};
        int step=0,ans=-1;
        while(!q.empty())
        {
            int k=q.size();
            step++;
            while(k--)
            {
                pair<int,int>p=q.front();
                q.pop();
                for(int i=0;i<4;i++)
                {
                  int x=p.first+dx[i];
                  int y=p.second+dy[i];
                    if(x<0 || y<0 || x>=n || y>=m || grid[x][y]) continue;
                    ans=step;
                    grid[x][y]=1;
                    q.push({x,y});
                }
            }
        }
            return ans;
    }
};

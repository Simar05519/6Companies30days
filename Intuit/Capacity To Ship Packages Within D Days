class Solution {
public:
    int isPos(vector<int>& weights,int mid, int days)
    {
        int d=1;
        int sum=0;
        for(int i=0;i<weights.size();i++)
        {
            sum+=weights[i];
            if(sum>mid)
            {
                d++;
                sum=weights[i];
            }
        }
        return d<=days;
    }
    
    int shipWithinDays(vector<int>& weights, int days) {
        int N=weights.size();
        int maxi=0;
        int sum=0;
        for(int i=0;i<N;i++)
        {
            sum+=weights[i];
            maxi=max(maxi,weights[i]);
        }
        if(N==days)
        {
            return maxi;
        }
        int low=maxi;
        int high=sum;
        int ans=0;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(isPos(weights,mid,days)==true)
            {
                ans=mid;
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
        }
        return ans;
        
    }
};

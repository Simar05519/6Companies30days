class Solution {
public:
    int maxPerformance(int n, vector<int>& speed, vector<int>& efficiency, int k) {
        vector<pair<int,int>>res;
        priority_queue<long long,vector<long long>,greater<long long>>pq;
        for(int i = 0; i <n; i++)
            res.push_back({efficiency[i],speed[i]});
        sort(res.begin(),res.end());
        long long ans = 0, sum = 0, mod = 1e9+7;
        for(int i = res.size()-1; i >= 0; i--){
            pq.push(res[i].second);
            sum += res[i].second;
            if(pq.size()>k){
                sum -= pq.top();
                pq.pop();
            }
            ans = max(ans,sum*res[i].first);
        }
        return ans%mod;
    }
};
